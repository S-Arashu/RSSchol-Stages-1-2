{"version":3,"file":"main.09c26e27c61d22dde80e.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AAGA;AACA;;;;;;;;;AC3EA","sources":["webpack://decision-making-tool/./src/builders/wheel.ts","webpack://decision-making-tool/webpack/runtime/getFullHash"],"sourcesContent":["import { getFromLocalStorage } from '..';\nimport { containerForOptions } from './mainBlock';\n\nexport function createChoosePage() {\n  containerForOptions.textContent = '';\n\n  const canvas = document.createElement('canvas');\n  canvas.setAttribute('id', 'wheel');\n  canvas.setAttribute('width', '400');\n  canvas.setAttribute('height', '400');\n\n  containerForOptions.append(canvas);\n\n  const selectedOption = document.createElement('div');\n  selectedOption.setAttribute('id', 'selectedOption');\n  containerForOptions.append(selectedOption);\n\n  const startButton = document.createElement('button');\n  startButton.setAttribute('id', 'startButton');\n  startButton.textContent = 'Start';\n  selectedOption.append(startButton);\n\n  const ctx = canvas.getContext('2d');\n\n  const options = getFromLocalStorage('dataFromInputs');\n\n  const sections = Object.keys(options).filter(key => key.startsWith('option-'));\n  const sizes = sections.map(section => parseInt(options[section.replace('option-', '#')]));\n\n  function drawWheel() {\n    const total = sizes.reduce((a, b) => a + b, 0);\n    let startAngle = 0;\n\n    if (ctx) {\n      sections.forEach((section, index) => {\n        const size = (sizes[index] / total) * 2 * Math.PI; // Calculate the angle\n        ctx.beginPath();\n        ctx.moveTo(150, 150); // Move to the center\n        ctx.arc(150, 150, 100, startAngle, startAngle + size); // Draw the arc\n        ctx.fillStyle = getRandomColor(); // Random color for each section\n        ctx.fill();\n        ctx.stroke();\n        startAngle += size; // Update start angle for next section\n      });\n    }\n  }\n\n  // Function to get a random color\n  function getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  function spinWheel() {\n    const spinTime = 3000; // 3 seconds spin time\n    const randomSection = Math.floor(Math.random() * sections.length);\n    const selectedAngle =\n      (sizes.slice(0, randomSection).reduce((a, b) => a + b, 0) /\n        sizes.reduce((a, b) => a + b, 0)) *\n      2 *\n      Math.PI;\n\n    selectedOption.innerText = `Selected: ${options[sections[randomSection]]}`; // Display the selected option\n    // Here would be code to animate the wheel spinning\n  }\n\n  // Draw the wheel on load\n  drawWheel();\n\n  // Start spin on button click\n  startButton.addEventListener('click', spinWheel);\n}\n","__webpack_require__.h = () => (\"68c934be45fde921a6c9\")"],"names":[],"sourceRoot":""}