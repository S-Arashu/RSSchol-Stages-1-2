{"version":3,"file":"main.4b8a1c5045d713e285eb.hot-update.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAgBA;;;;;;;;;ACrEA","sources":["webpack://decision-making-tool/./src/builders/dialog.ts","webpack://decision-making-tool/webpack/runtime/getFullHash"],"sourcesContent":["export function dialogWrongValue(parent: { append: (arg0: HTMLDialogElement) => void }) {\n  const dialogWrong = document.createElement('dialog');\n  dialogWrong.classList.add('popup-wrong');\n  dialogWrong.textContent = 'Please, enter correct data';\n  parent.append(dialogWrong);\n  const dialogWrapper = document.createElement('div');\n  dialogWrapper.classList.add('dialog-wrapper');\n  dialogWrong.append(dialogWrapper);\n  const dialogButton = document.createElement('button');\n  dialogButton.classList.add('dialog-button');\n  dialogButton.innerText = 'OK';\n  dialogWrapper.append(dialogButton);\n  dialogWrong.showModal();\n\n  // dialogWrong.addEventListener('cancel', event => {\n  //   // if (event.key === 'Escape') {\n  //   dialogWrong.remove();\n  //   console.log(`remove dialogWrong`);\n  //   // location.hash = 'main';\n  //   // }\n  // });\n\n  dialogButton.addEventListener('click', () => {\n    // dialogWrong.close();\n    if (dialogWrong.open) {\n      dialogWrong.remove();\n    }\n\n    // location.hash = 'main';\n  });\n\n  document.addEventListener('keydown', event => {\n    if (event.key === 'Escape') {\n      if (dialogWrong.open) {\n        dialogWrong.remove(); // Close dialog1 if it's open\n        console.log(`remove dialogWrong`);\n      }\n    }\n  });\n\n  const handleModalClick = (event: { clientX: number; clientY: number }) => {\n    const modalRect = dialogWrong.getBoundingClientRect();\n\n    if (\n      event.clientX < modalRect.left ||\n      event.clientX > modalRect.right ||\n      event.clientY < modalRect.top ||\n      event.clientY > modalRect.bottom\n    ) {\n      dialogWrong.remove();\n    }\n  };\n\n  dialogWrong.addEventListener('click', handleModalClick);\n\n  // dialogWrong.addEventListener('click', closeOnBackDropClick);\n\n  // function closeOnBackDropClick({ currentTarget, target }: MouseEvent): void {\n  //   const dialogElement = currentTarget;\n\n  //   if (dialogElement instanceof HTMLDialogElement) {\n  //     const isClickedOnBackDrop = target === dialogElement;\n  //     if (isClickedOnBackDrop && dialogElement) {\n  //       dialogElement.close();\n  //       // dialogElement.remove();\n  //       location.hash = 'main';\n  //     }\n  //   }\n  // }\n}\n","__webpack_require__.h = () => (\"324a88f2a586a8d7af4e\")"],"names":[],"sourceRoot":""}