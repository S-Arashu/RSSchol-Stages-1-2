(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();var ee=Object.defineProperty,te=(i,e,t)=>e in i?ee(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,v=(i,e,t)=>te(i,typeof e!="symbol"?e+"":e,t);(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))t(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function e(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function t(r){if(r.ep)return;r.ep=!0;const n=e(r);fetch(r.href,n)}})();function a(i,e,t){const r=document.createElement(i);return e&&(r.className=e),t&&(r.textContent=t),r}function p(i,e){e.forEach(t=>i.appendChild(t))}const J=["Tesla","Ford","Toyota","Honda","Chevrolet","BMW","Mercedes","Audi","Volkswagen","Porsche"],D=["Model S","Model 3","Mustang","Camry","Civic","Corvette","X5","E-Class","A4","911"];function re(){const i=J[Math.floor(Math.random()*J.length)],e=D[Math.floor(Math.random()*D.length)],t=`${i} ${e}`,r=Math.floor(Math.random()*256).toString(16).padStart(2,"0"),n=Math.floor(Math.random()*256).toString(16).padStart(2,"0"),o=Math.floor(Math.random()*256).toString(16).padStart(2,"0"),s=`#${r}${n}${o}`;return{name:t,color:s}}function ne(i,e){return e/i}function ie(i){return`
    <svg width="50" height="20" viewBox="0 0 50 20" xmlns="http://www.w3.org/2000/svg">
      <rect class="car-body" width="50" height="20" rx="6" fill="${i}" />
      <rect class="car-window" x="20" y="3" width="15" height="8" rx="2" fill="#e0e0e0" />
      <circle class="car-wheel" cx="10" cy="20" r="4" fill="#333" />
      <circle class="car-wheel" cx="40" cy="20" r="4" fill="#333" />
    </svg>
  `}function ae(i){const e=a("div","car");return e.innerHTML=ie(i.color),e.style.transform="translateX(0)",e.dataset.carId=i.id.toString(),e}function j(i,e,t,r,n){const o=a("div","pagination"),s=a("button","","Previous");s.disabled=i<=1,s.addEventListener("click",t);const l=n?`${i} of ${n}`:e?`${i}+`:i.toString(),d=a("span","",`Page ${l}`),c=a("button","","Next");return c.disabled=!e,c.addEventListener("click",r),p(o,[s,d,c]),o}function C(i,e="success"){const t=a("div",`notification ${e}`);t.textContent=i,document.body.appendChild(t),setTimeout(()=>{document.body.removeChild(t)},3e3)}function oe(i){document.body.appendChild(i),setTimeout(()=>{i.classList.add("open")},10)}function M(i,e){const t=new URL(window.location.href);t.searchParams.set("view",i),t.searchParams.set("page",e.toString()),window.history.pushState({},"",t.toString())}function se(){const i=new URLSearchParams(window.location.search);return{view:i.get("view")||"garage",page:parseInt(i.get("page")||"1",10)}}const ce=[{id:1,name:"Tesla Model S",color:"#3f51b5"},{id:2,name:"Ford Mustang",color:"#f44336"},{id:3,name:"Chevrolet Camaro",color:"#ff9800"},{id:4,name:"BMW X5",color:"#4caf50"},{id:5,name:"Audi R8",color:"#2196f3"},{id:6,name:"Porsche 911",color:"#9c27b0"},{id:7,name:"Mercedes-Benz S-Class",color:"#607d8b"}];class le{constructor(){v(this,"cars",new Map),v(this,"winners",new Map),v(this,"nextCarId",8),v(this,"nextWinnerId",1),ce.forEach(e=>{this.cars.set(e.id,e)})}getCars(e=1,t=7){const r=Array.from(this.cars.values()),n=(e-1)*t;return{items:r.slice(n,n+t),count:r.length}}getCar(e){return this.cars.get(e)}createCar(e){const t=this.nextCarId++,r={...e,id:t};return this.cars.set(t,r),r}updateCar(e,t){const r=this.cars.get(e);if(!r)return;const n={...r,...t};return this.cars.set(e,n),n}deleteCar(e){return this.winners.forEach((t,r)=>{t.carId===e&&this.winners.delete(r)}),this.cars.delete(e)}startEngine(e){const t=Math.floor(Math.random()*150)+50,r=Math.floor(Math.random()*1e3)+500;return{velocity:t,distance:r}}driveEngine(e){return{success:Math.random()>.2}}getWinners(e=1,t=10,r="id",n="ASC"){let o=Array.from(this.winners.values());o.sort((l,d)=>{let c=0;return r==="id"?c=l.id-d.id:r==="wins"?c=l.wins-d.wins:r==="time"&&(c=l.bestTime-d.bestTime),n==="ASC"?c:-c});const s=(e-1)*t;return{items:o.slice(s,s+t).map(l=>{const d=this.cars.get(l.carId);if(!d)throw new Error(`Car not found for winner: ${l.id}`);return{...l,car:d}}),count:o.length}}getWinner(e){const t=this.winners.get(e);if(!t)return;const r=this.cars.get(t.carId);if(r)return{...t,car:r}}getWinnerByCarId(e){return Array.from(this.winners.values()).find(t=>t.carId===e)}createWinner(e){const t=this.getWinnerByCarId(e.carId);if(t)return this.updateWinner(t.id,{wins:t.wins+1,bestTime:Math.min(t.bestTime,e.time)});const r=this.nextWinnerId++,n={id:r,carId:e.carId,wins:1,bestTime:e.time};return this.winners.set(r,n),n}updateWinner(e,t){const r=this.winners.get(e);if(!r)return;const n={...r};return t.wins!==void 0&&(n.wins=t.wins),t.bestTime!==void 0&&(n.bestTime=t.bestTime),this.winners.set(e,n),n}deleteWinner(e){return this.winners.delete(e)}generateRandomCars(e=100){for(let t=0;t<e;t++){const r=re();this.createCar(r)}}}const E=new le,b="/api",S=window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1";async function $(i){if(!i.ok)throw new Error(`HTTP error ${i.status}: ${i.statusText}`);try{const e=i.headers.get("content-type"),t=await i.text();if(console.log("API Response:",{url:i.url,status:i.status,contentType:e,textLength:t.length,textPreview:t.substring(0,100)}),t.trim().startsWith("<!DOCTYPE")||t.trim().startsWith("<html"))throw console.error("Error: Received HTML instead of JSON",t.substring(0,200)),new Error("Received HTML instead of JSON. The server may be returning an error page.");return JSON.parse(t)}catch(e){throw console.error("Error parsing API response:",e),new Error(`Failed to parse response: ${e instanceof Error?e.message:String(e)}`)}}async function G(i=1,e=7){if(console.log(`Fetching cars for page ${i} with limit ${e}`),S)return console.log("Using mock data for cars"),E.getCars(i,e);const t=await fetch(`${b}/garage?page=${i}&limit=${e}`);return $(t)}async function de(i){if(S)return E.createCar(i);const e=await fetch(`${b}/garage`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)});return $(e)}async function he(i,e){if(S){const r=E.updateCar(i,e);if(!r)throw new Error(`Car with id ${i} not found`);return r}const t=await fetch(`${b}/garage/${i}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return $(t)}async function ue(i){if(S){if(!E.deleteCar(i))throw new Error(`Car with id ${i} not found`);return}const e=await fetch(`${b}/garage/${i}`,{method:"DELETE"});return $(e)}async function ge(i=100){if(S){E.generateRandomCars(i);return}const e=await fetch(`${b}/garage/generate`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({count:i})});return $(e)}async function pe(i){if(S)return E.startEngine(i);const e=await fetch(`${b}/engine`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:i,status:"started"})});return $(e)}async function me(i){if(S)return E.driveEngine(i);try{const e=await fetch(`${b}/engine`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:i,status:"drive"})});return e.status===500?{success:!1}:$(e)}catch(e){return console.error("Drive engine error:",e),{success:!1}}}async function we(i){if(S)return;const e=await fetch(`${b}/engine`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:i,status:"stopped"})});return $(e)}async function fe(i=1,e=10,t="id",r="ASC"){if(console.log(`Fetching winners for page ${i} with limit ${e}, sort=${t}, order=${r}`),S)return console.log("Using mock data for winners"),E.getWinners(i,e,t,r);const n=await fetch(`${b}/winners?page=${i}&limit=${e}&sort=${t}&order=${r}`);return $(n)}async function X(i,e){if(S)return E.createWinner({carId:i,time:e});try{const r=await ve(i);if(r)return ye(r.id,{wins:r.wins+1,bestTime:Math.min(r.bestTime,e)})}catch{console.log("No existing winner found, creating new one")}const t=await fetch(`${b}/winners`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({carId:i,time:e})});return $(t)}async function ye(i,e){if(S){const r=E.updateWinner(i,e);if(!r)throw new Error(`Winner with id ${i} not found`);return r}const t=await fetch(`${b}/winners/${i}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return $(t)}async function ve(i){if(S)return E.getWinnerByCarId(i)||null;const e=await fetch(`${b}/winners?carId=${i}`),t=await $(e);return console.log(`Found ${t.length} winners for carId ${i}:`,t),t.length>0?t[0]:null}class Ce{constructor(e){v(this,"container"),v(this,"carsContainer"),v(this,"racingCars"),this.container=e,this.carsContainer=a("div","car-list"),this.racingCars=new Map}async renderGarage(e){this.container.innerHTML="",this.racingCars.clear();const t=a("div","page-info"),r=a("h2","");try{const{items:n,count:o}=await G(e.viewStates.garage.page,7);r.innerHTML=`Garage <span class="count-badge">${o}</span>`;const s=a("p","",`Page ${e.viewStates.garage.page}`);p(t,[r,s]);const l=this.createCarForm(e,!1),d=this.createCarForm(e,!0),c=this.createRaceControls(e);if(this.carsContainer.innerHTML="",n.length===0){const w=a("div","empty-message","No cars available. Create one!");this.carsContainer.appendChild(w)}else n.forEach(w=>{const g=this.createCarItem(w,e);this.carsContainer.appendChild(g)});const u=Math.ceil(o/7),f=e.viewStates.garage.page<u,h=j(e.viewStates.garage.page,f,()=>this.handlePrevPage(e),()=>this.handleNextPage(e),u);p(this.container,[t,l,d,c,this.carsContainer,h]),M("garage",e.viewStates.garage.page)}catch(n){console.error("Error loading garage:",n),r.textContent="Garage";const o=a("div","error-message","Failed to load cars. Please try again.");p(this.container,[t,o])}}createCarForm(e,t){const r=a("div","form-section"),n=a("h3","",t?"Update car":"Create car"),o=a("form","car-form"),s=a("div","form-row"),l=a("div","input-group"),d=a("label","","Car name");d.htmlFor=t?"update-car-name":"create-car-name";const c=a("input","");c.type="text",c.id=t?"update-car-name":"create-car-name",c.required=!0,c.value=t&&e.carForm.selectedCarId!==null?e.carForm.name:"",p(l,[d,c]);const u=a("div","input-group"),f=a("label","","Car color");f.htmlFor=t?"update-car-color":"create-car-color";const h=a("input","");h.type="color",h.id=t?"update-car-color":"create-car-color",h.value=t&&e.carForm.selectedCarId!==null?e.carForm.color:"#3f51b5",p(u,[f,h]),p(s,[l,u]);const w=a("button","",t?"Update":"Create");return w.type="submit",w.disabled=t&&e.carForm.selectedCarId===null,o.addEventListener("submit",async g=>{g.preventDefault();const m=document.getElementById(t?"update-car-name":"create-car-name").value,T=document.getElementById(t?"update-car-color":"create-car-color").value;t&&e.carForm.selectedCarId!==null?await this.handleUpdateCar(e,e.carForm.selectedCarId,m,T):await this.handleCreateCar(e,m,T),t||(c.value="",h.value="#3f51b5")}),p(o,[s,w]),p(r,[n,o]),t&&e.carForm.selectedCarId===null&&(r.style.display="none"),r}createRaceControls(e){const t=a("div","race-controls"),r=a("button","button-success","Race");r.disabled=e.race.isRacing,r.addEventListener("click",()=>this.handleStartRace(e));const n=a("button","button-secondary","Reset");n.disabled=!e.race.isRacing,n.addEventListener("click",()=>this.handleResetRace(e));const o=a("button","","Generate Cars");return o.addEventListener("click",()=>this.handleGenerateCars(e)),p(t,[r,n,o]),t}createCarItem(e,t){const r=a("div","car-item");r.dataset.carId=e.id.toString();const n=a("div","car-header"),o=a("div","car-info"),s=a("h3","",e.name),l=a("p","car-id",`#${e.id}`);p(o,[s,l]);const d=a("div","car-buttons"),c=a("button","button-secondary","Edit");c.addEventListener("click",()=>{t.carForm.selectedCarId=e.id,t.carForm.name=e.name,t.carForm.color=e.color,t.carForm.isUpdate=!0,this.renderGarage(t)});const u=a("button","button-danger","Delete");u.addEventListener("click",()=>this.handleDeleteCar(t,e.id)),p(d,[c,u]),p(n,[o,d]);const f=a("div","track"),h=a("div","engine-controls car-controls"),w=a("button","button-success","Start");w.addEventListener("click",()=>this.startCarEngine(t,e.id));const g=a("button","button-danger","Stop");g.disabled=!0,g.addEventListener("click",()=>this.stopCarEngine(t,e.id)),p(h,[w,g]);const m=ae(e),T=a("div","finish-line");return p(f,[h,m,T]),p(r,[n,f]),this.racingCars.set(e.id,{element:m,animationId:null}),r}async handleCreateCar(e,t,r){try{await de({name:t,color:r}),C("Car created successfully!","success"),this.renderGarage(e)}catch(n){console.error("Error creating car:",n),C("Failed to create car","error")}}async handleUpdateCar(e,t,r,n){try{await he(t,{name:r,color:n}),e.carForm.selectedCarId=null,e.carForm.name="",e.carForm.color="",e.carForm.isUpdate=!1,C("Car updated successfully!","success"),this.renderGarage(e)}catch(o){console.error("Error updating car:",o),C("Failed to update car","error")}}async handleDeleteCar(e,t){try{await ue(t),e.carForm.selectedCarId===t&&(e.carForm.selectedCarId=null,e.carForm.name="",e.carForm.color="",e.carForm.isUpdate=!1),C("Car deleted successfully!","success"),this.renderGarage(e)}catch(r){console.error("Error deleting car:",r),C("Failed to delete car","error")}}async startCarEngine(e,t){if(this.racingCars.get(t))try{const r=await this.handleStartEngine(e,t),n=document.querySelector(`.car-item[data-car-id="${t}"]`);if(!n)return;const o=n.querySelector(".engine-controls button:first-child"),s=n.querySelector(".engine-controls button:last-child");o&&s&&(o.disabled=!0,s.disabled=!1),this.animateCar(e,t,r)}catch(r){console.error(`Error starting engine for car ${t}:`,r),C(`Failed to start engine for car ${t}`,"error")}}async stopCarEngine(e,t){if(this.racingCars.get(t))try{await this.handleStopEngine(e,t);const r=document.querySelector(`.car-item[data-car-id="${t}"]`);if(!r)return;const n=r.querySelector(".engine-controls button:first-child"),o=r.querySelector(".engine-controls button:last-child");n&&o&&(n.disabled=!1,o.disabled=!0),this.resetCarPosition(t)}catch(r){console.error(`Error stopping engine for car ${t}:`,r),C(`Failed to stop engine for car ${t}`,"error")}}animateCar(e,t,r){var n;const o=this.racingCars.get(t);if(!o||!o.element)return;const{velocity:s,distance:l}=r,d=ne(s,l),c=o.element.closest(".track");if(!c)return;const u=c.clientWidth,f=o.element.clientWidth,h=u-f-20;console.log(`Car ${t} animating with velocity: ${s}, distance: ${l}, time: ${d}s`),o.element.style.transition=`transform ${d}s linear`,o.element.style.transform=`translateX(${h}px)`;const w=Date.now(),g=document.querySelector(`.car-item[data-car-id="${t}"]`),m=((n=g==null?void 0:g.querySelector(".car-info h3"))==null?void 0:n.textContent)||`Car ${t}`;me(t).then(({success:T})=>{if(!T){if(console.log(`Car ${t} engine broke down!`),C(`${m}'s engine broke down!`,"error"),g){const y=a("div","broken-engine-indicator","⚠️ Engine failure");y.style.color="red",y.style.fontWeight="bold",y.style.position="absolute",y.style.bottom="5px",y.style.left="50px",c==null||c.appendChild(y),setTimeout(()=>{c.removeChild(y)},3e3)}this.stopCarAnimation(t);return}o.animationId=window.setTimeout(()=>{const y=(Date.now()-w)/1e3;console.log(`Car ${t} finished in ${y.toFixed(2)}s`),e.race.isRacing&&!e.race.winner&&this.handleRaceFinish(e,t,y),o.animationId=null},d*1e3)})}stopCarAnimation(e){const t=this.racingCars.get(e);if(t&&(t.animationId!==null&&(clearTimeout(t.animationId),t.animationId=null),t.element)){const r=window.getComputedStyle(t.element).transform;t.element.style.transition="none",t.element.style.transform=r}}resetCarPosition(e){const t=this.racingCars.get(e);!t||!t.element||(t.element.style.transition="transform 0.3s ease-out",t.element.style.transform="translateX(0)")}async handleRaceFinish(e,t,r){var n,o;try{console.log(`Race finished: Car ${t} with time ${r.toFixed(2)}s`);const s=document.querySelector(`.car-item[data-car-id="${t}"]`),l=((n=s==null?void 0:s.querySelector(".car-info h3"))==null?void 0:n.textContent)||`Car ${t}`,d=((o=document.querySelector(`[data-car-id="${t}"] .car-svg`))==null?void 0:o.getAttribute("fill"))||"#000000",c={id:t,name:l,color:d};if(console.log("Winning car found:",c),c){e.race.winner={car:c,time:r};try{console.log(`Attempting to record winner: Car ${t} with time ${r}`);const I=await X(t,r);console.log("Successfully recorded winner:",I)}catch(I){console.error("Failed to record winner:",I)}const u=a("div","modal winner-modal"),f=a("div","modal-content"),h=a("div","modal-header"),w=a("h2","winner-title","Winner!"),g=a("button","close-button","X");g.addEventListener("click",()=>{u.classList.remove("open"),document.body.removeChild(u)}),p(h,[w,g]);const m=a("div","modal-body"),T=a("div","winner-info"),y=a("div","car-preview winner-animation");y.innerHTML=`
          <div class="car-body" style="background-color: ${c.color};"></div>
          <div class="car-window"></div>
        `;const P=a("p","winner-name",`${c.name} won the race!`),L=a("p","winner-time",`Time: ${r.toFixed(2)}s`);p(T,[y,P,L]),m.appendChild(T);const x=a("div","modal-footer"),F=a("button","","OK");F.addEventListener("click",()=>{u.classList.remove("open"),document.body.removeChild(u)}),x.appendChild(F),p(f,[h,m,x]),u.appendChild(f),oe(u)}}catch(s){console.error("Error handling race finish:",s)}}async handleStartEngine(e,t){try{return await pe(t)}catch(r){throw console.error(`Error starting engine for car ${t}:`,r),r}}async handleStopEngine(e,t){try{this.stopCarAnimation(t),await we(t),this.resetCarPosition(t)}catch(r){throw console.error(`Error stopping engine for car ${t}:`,r),r}}async handleStartRace(e){try{e.race.isRacing=!0,e.race.winner=null;const{items:t}=await G(e.viewStates.garage.page,7),r=document.querySelector(".race-controls button:first-child"),n=document.querySelector(".race-controls button:nth-child(2)");r&&n&&(r.disabled=!0,n.disabled=!1);const o=t.map(async s=>{try{const l=await this.handleStartEngine(e,s.id),d=document.querySelector(`.car-item[data-car-id="${s.id}"]`);if(!d)return;const c=d.querySelector(".engine-controls button:first-child"),u=d.querySelector(".engine-controls button:last-child");c&&u&&(c.disabled=!0,u.disabled=!1),this.animateCar(e,s.id,l)}catch(l){console.error(`Error starting engine for car ${s.id} during race:`,l)}});await Promise.all(o)}catch(t){console.error("Error starting race:",t),e.race.isRacing=!1,C("Failed to start race","error")}}async handleResetRace(e){try{e.race.isRacing=!1,e.race.winner=null;const{items:t}=await G(e.viewStates.garage.page,7),r=document.querySelector(".race-controls button:first-child"),n=document.querySelector(".race-controls button:nth-child(2)");r&&n&&(r.disabled=!1,n.disabled=!0);const o=t.map(async s=>{try{await this.handleStopEngine(e,s.id);const l=document.querySelector(`.car-item[data-car-id="${s.id}"]`);if(!l)return;const d=l.querySelector(".engine-controls button:first-child"),c=l.querySelector(".engine-controls button:last-child");d&&c&&(d.disabled=!1,c.disabled=!0)}catch(l){console.error(`Error stopping engine for car ${s.id} during reset:`,l)}});await Promise.all(o)}catch(t){console.error("Error resetting race:",t),C("Failed to reset race","error")}}async handleGenerateCars(e){try{await ge(),C("Successfully generated 100 cars!","success"),this.renderGarage(e)}catch(t){console.error("Error generating cars:",t),C("Failed to generate cars","error")}}handleNextPage(e){e.viewStates.garage.page+=1,M("garage",e.viewStates.garage.page),this.renderGarage(e)}handlePrevPage(e){e.viewStates.garage.page>1&&(e.viewStates.garage.page-=1,M("garage",e.viewStates.garage.page),this.renderGarage(e))}}class be{constructor(e){v(this,"container"),v(this,"sortColumn","id"),v(this,"sortOrder","ASC"),this.container=e}async renderWinners(e){this.container.innerHTML="";const t=a("div","page-info"),r=a("h2","");try{console.log("Fetching winners with params:",{page:e.viewStates.winners.page,limit:10,sort:this.sortColumn,order:this.sortOrder});const n=await fe(e.viewStates.winners.page,10,this.sortColumn,this.sortOrder);console.log("Winners response:",n);const{items:o,count:s}=n;r.innerHTML=`Winners <span class="count-badge">${s}</span>`;const l=a("p","",`Page ${e.viewStates.winners.page}`);p(t,[r,l]);const d=a("div","table-container");if(o.length===0){const h=a("div","empty-message","No winners yet!");d.appendChild(h)}else{const h=a("table","table"),w=a("thead",""),g=a("tr",""),m=(P,L)=>{const x=a("th",""),F=a("div","table-header-sortable");if(F.textContent=P,L==="wins"||L==="bestTime"){const I=a("span",`sort-icon ${this.sortColumn===L?this.sortOrder.toLowerCase():""}`);F.appendChild(I),x.addEventListener("click",()=>{const N=this.sortColumn===L&&this.sortOrder==="ASC"?"DESC":"ASC";this.handleSort(e,L,N)})}return x.appendChild(F),x},T=[m("№","id"),m("Car",""),m("Name","name"),m("Wins","wins"),m("Best Time (s)","bestTime")];p(g,T),w.appendChild(g);const y=a("tbody","");o.forEach((P,L)=>{const x=a("tr",""),F=a("td","",`${(e.viewStates.winners.page-1)*10+L+1}`),I=a("td",""),N=a("div","car-preview");N.innerHTML=`
            <div class="car-body" style="background-color: ${P.car.color};"></div>
            <div class="car-window"></div>
          `,I.appendChild(N);const z=a("td","",P.car.name),Q=a("td","",P.wins.toString()),Z=typeof P.bestTime=="string"?parseFloat(P.bestTime).toFixed(2):P.bestTime.toFixed(2),_=a("td","",Z);p(x,[F,I,z,Q,_]),y.appendChild(x)}),p(h,[w,y]),d.appendChild(h)}const c=Math.ceil(s/10),u=e.viewStates.winners.page<c,f=j(e.viewStates.winners.page,u,()=>this.handlePrevPage(e),()=>this.handleNextPage(e),c);p(this.container,[t,d,f]),M("winners",e.viewStates.winners.page)}catch(n){console.error("Error loading winners:",n),r.textContent="Winners";const o=a("div","error-message","Failed to load winners. Please try again.");p(this.container,[t,o])}}handleSort(e,t,r){this.sortColumn=t,this.sortOrder=r,this.renderWinners(e)}handleNextPage(e){e.viewStates.winners.page+=1,M("winners",e.viewStates.winners.page),this.renderWinners(e)}handlePrevPage(e){e.viewStates.winners.page>1&&(e.viewStates.winners.page-=1,M("winners",e.viewStates.winners.page),this.renderWinners(e))}async recordWinner(e,t,r){try{await X(t,r)}catch(n){console.error("Error recording winner:",n)}}}const U=[{title:"Welcome to Car Racing SPA!",content:"This quick tutorial will guide you through the main features of the application. Click Next to continue or Skip to exit the tutorial.",target:"h1",position:"bottom",highlightTarget:!0},{title:"Navigation",content:"Use these buttons to switch between the Garage view and the Winners view.",target:"nav",position:"bottom",highlightTarget:!0},{title:"Garage View",content:"The Garage view allows you to create, update, and delete cars, as well as race them.",target:'[data-view="garage"]',position:"bottom",highlightTarget:!0},{title:"Winners View",content:"The Winners view shows the statistics of all races, including the best time and number of wins for each car.",target:'[data-view="winners"]',position:"bottom",highlightTarget:!0},{title:"Create Car",content:"Use this form to create a new car. Enter a name and pick a color, then click Create.",target:".car-form:first-child",position:"right",highlightTarget:!0},{title:"Update Car",content:`To update a car, click the "Edit" button next to a car. This will populate the update form with the car's details.`,target:".button-secondary",position:"right",highlightTarget:!1},{title:"Race Controls",content:"These buttons allow you to start a race with all cars, reset all cars to their starting positions, or generate random cars.",target:".race-controls",position:"bottom",highlightTarget:!0},{title:"Car Controls",content:"Each car has its own controls. You can start the engine, stop it, select the car for updates, or delete it.",target:".engine-controls",position:"right",highlightTarget:!0},{title:"Pagination",content:"Use these buttons to navigate between pages of cars or winners.",target:".pagination",position:"top",highlightTarget:!0},{title:"That's it!",content:`You're all set to use the Car Racing SPA! Click Finish to close this tutorial. You can access it again anytime by clicking the "?" button in the navigation.`,target:".help-button",position:"bottom",highlightTarget:!0}];class B{constructor(e,t){v(this,"currentStep",0),v(this,"overlay"),v(this,"tooltip"),v(this,"skipCallback"),v(this,"completionCallback"),this.skipCallback=e,this.completionCallback=t,this.overlay=a("div","tutorial-overlay"),document.body.appendChild(this.overlay),this.tooltip=a("div","tutorial-tooltip"),document.body.appendChild(this.tooltip)}start(){this.overlay.classList.add("active"),this.showStep(0)}end(){this.overlay.classList.remove("active"),this.tooltip.classList.remove("active"),setTimeout(()=>{this.overlay.remove(),this.tooltip.remove()},300),localStorage.setItem("tutorialCompleted","true"),this.completionCallback()}showStep(e){this.currentStep=e;const t=U[e];this.tooltip.innerHTML="",this.tooltip.className="tutorial-tooltip";const r=a("div","tutorial-title",t.title),n=a("div","tutorial-content",t.content),o=a("div","tutorial-buttons"),s=a("button","tutorial-button tutorial-skip","Skip");s.addEventListener("click",()=>this.skip());const l=a("div","tutorial-nav-buttons"),d=a("button","tutorial-button tutorial-prev","Prev");d.disabled=e===0,d.addEventListener("click",()=>this.showStep(this.currentStep-1));const c=e===U.length-1,u=a("button",`tutorial-button ${c?"tutorial-finish":"tutorial-next"}`,c?"Finish":"Next");u.addEventListener("click",()=>{c?this.end():this.showStep(this.currentStep+1)}),l.appendChild(d),l.appendChild(u),o.appendChild(s),o.appendChild(l);const f=a("div","tutorial-progress");for(let h=0;h<U.length;h++){const w=a("div",`tutorial-indicator ${h===e?"active":""}`);f.appendChild(w)}if(this.tooltip.appendChild(r),this.tooltip.appendChild(n),this.tooltip.appendChild(o),this.tooltip.appendChild(f),this.tooltip.classList.add(`position-${t.position}`),this.tooltip.classList.add("active"),this.positionTooltip(t),t.highlightTarget){const h=document.querySelector(".tutorial-highlight");h&&h.remove();const w=document.querySelector(t.target);if(w)try{const g=a("div","tutorial-highlight"),m=w.getBoundingClientRect();m.width>0&&m.height>0?(g.style.top=`${m.top}px`,g.style.left=`${m.left}px`,g.style.width=`${m.width}px`,g.style.height=`${m.height}px`,document.body.appendChild(g)):console.warn(`Tutorial target ${t.target} has invalid dimensions`)}catch(g){console.error(`Error creating highlight for ${t.target}:`,g)}}}positionTooltip(e){const t=document.querySelector(e.target);if(!t){if(console.warn(`Tutorial target not found: ${e.target}`),this.currentStep===0){const l=document.querySelector("header");if(l){const d=l.getBoundingClientRect();this.tooltip.style.top=`${d.bottom+15}px`,this.tooltip.style.left="50%",this.tooltip.style.transform="translateX(-50%)";return}}this.tooltip.style.top="50%",this.tooltip.style.left="50%",this.tooltip.style.transform="translate(-50%, -50%)";return}const r=t.getBoundingClientRect(),n=this.tooltip.getBoundingClientRect();let o=0,s=0;switch(e.position){case"top":o=r.top-n.height-15,s=r.left+r.width/2-n.width/2;break;case"bottom":o=r.bottom+15,s=r.left+r.width/2-n.width/2;break;case"left":o=r.top+r.height/2-n.height/2,s=r.left-n.width-15;break;case"right":o=r.top+r.height/2-n.height/2,s=r.right+15;break}o<10&&(o=10),o+n.height>window.innerHeight-10&&(o=window.innerHeight-n.height-10),s<10&&(s=10),s+n.width>window.innerWidth-10&&(s=window.innerWidth-n.width-10),this.tooltip.style.top=`${o}px`,this.tooltip.style.left=`${s}px`}skip(){this.end(),this.skipCallback()}static shouldShowTutorial(){return localStorage.getItem("tutorialCompleted")!=="true"}static resetTutorial(){localStorage.removeItem("tutorialCompleted")}}const k={view:"garage",viewStates:{garage:{page:1},winners:{page:1}},carForm:{name:"",color:"#3f51b5",isUpdate:!1,selectedCarId:null},race:{isRacing:!1,winner:null}},q=a("div","container");document.body.appendChild(q);const Y=a("header","header"),Se=a("h1","","Car Racing SPA");Y.appendChild(Se);q.appendChild(Y);const W=a("nav","nav"),R=a("button","nav-button","Garage");R.setAttribute("data-view","garage");const O=a("button","nav-button","Winners");O.setAttribute("data-view","winners");R.addEventListener("click",()=>K("garage"));O.addEventListener("click",()=>K("winners"));W.appendChild(R);W.appendChild(O);q.appendChild(W);const A=a("main","main-content");q.appendChild(A);const $e=new Ce(A),Te=new be(A);function K(i){k.view=i,R.classList.toggle("active",i==="garage"),O.classList.toggle("active",i==="winners"),V()}async function V(){A.innerHTML="",k.view==="garage"?await $e.renderGarage(k):k.view==="winners"&&await Te.renderWinners(k)}async function Ee(){const{view:i,page:e}=se();if(k.view=i,i==="garage"?k.viewStates.garage.page=e:i==="winners"&&(k.viewStates.winners.page=e),R.classList.toggle("active",k.view==="garage"),O.classList.toggle("active",k.view==="winners"),await V(),B.shouldShowTutorial()){const t=a("button","nav-button help-button","?");t.title="Show Tutorial",t.style.borderRadius="50%",t.style.width="30px",t.style.height="30px",t.style.marginLeft="auto",t.addEventListener("click",()=>{B.resetTutorial(),H()}),W.appendChild(t),H()}else{const t=a("button","nav-button help-button","?");t.title="Show Tutorial",t.style.borderRadius="50%",t.style.width="30px",t.style.height="30px",t.style.marginLeft="auto",t.addEventListener("click",()=>H()),W.appendChild(t)}}function H(){new B(()=>{console.log("Tutorial skipped")},()=>{console.log("Tutorial completed")}).start()}Ee().catch(i=>{console.error("Error initializing application:",i)});
